//=============================================================================
//
// エネミー処理 [enemy.h]
// Author : GP12A295 25 人見友基
//
//=============================================================================
#ifndef _ENEMY_H_
#define _ENEMY_H_

/*******************************************************************************
* インクルード
*******************************************************************************/

//*****************************************************************************
// マクロ定義
//*****************************************************************************
//#define MODEL_PLAYER			("data/model/haku/haku.X")
//#define MODEL_WING				("data/model/wing/wing.X")

//*****************************************************************************
// 構造体定義
//*****************************************************************************

//*****************************************************************************
// クラス定義
//*****************************************************************************
class Enemy
{
public:

	// コンストラクタ（初期化処理）
	Enemy(void);
	//デストラクタ（終了処理）
	~Enemy(void);

	// 更新処理
	virtual void Update(void);
	// 描画処理
	virtual void Draw(void);
private:


};

class EnemyNormal : public Enemy
{
public:

	// コンストラクタ（初期化処理）
	EnemyNormal(void);
	//デストラクタ（終了処理）
	~EnemyNormal(void);

	// 更新処理
	virtual void Update(void);
	// 描画処理
	virtual void Draw(void);
private:


};



class EnemyManager
{
public:
	enum ENEMY
	{	
		ENEMY_MAX
	};

	// コンストラクタ（初期化処理）
	EnemyManager(void);
	//デストラクタ（終了処理）
	~EnemyManager(void);


private:
};

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************

#endif
